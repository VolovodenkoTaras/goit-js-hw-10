{"mappings":"YAAA,IAAMA,EAAO,CACXC,iBAAkBC,SAASC,cAAc,YACzCC,MAAOF,SAASC,cAAc,cAM1BE,EAAW,uCAEXC,EAAU,CACdC,QAAS,CACPC,cAAe,gCAIfC,EAAO,EAYX,SAASC,I,IAAWC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAD,EACzB,OAAOE,MAAM,GAAoBC,OAAjBV,EAAS,UAAaU,OAALJ,EAAK,cAAaL,GAASU,MAC1D,SAACC,GACC,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAE3B,OAAOH,EAASI,M,IAatB,SAASC,EAAaC,GACpB,IAAMC,EAASD,EACZE,KAAI,SAAAC,G,IAAGC,EAAID,EAAJC,KAAMC,EAAIF,EAAJE,KACZ,MAAO,uBAEEb,OADCY,EAAK,wBACDZ,OAALa,EAAK,sB,IAGfC,KAAK,IACR7B,EAAKC,iBAAiB6B,mBAAmB,YAAaN,E,CAjBxDd,IACGM,MAAK,SAACe,GACLT,EAAaS,EAAKC,MAClBC,EAASC,QAAQlC,EAAKI,M,IAGvB+B,OAAM,SAACC,G,OAAUC,QAAQC,IAAIF,E,IAchC,IAIMH,EAAW,IAAIM,sBAErB,SAAgBC,GAEdA,EAASC,SAAQ,SAACC,GAChBL,QAAQC,IAAII,EAAMC,gBACdD,EAAMC,gBAERjC,EADAD,GAAQ,GACSO,MAAK,SAACe,GACrBT,EAAaS,EAAKC,MACdD,EAAKa,OAASb,EAAKc,OACrBZ,EAASa,UAAU9C,EAAKI,M,SAfnB,CACb2C,KAAM,KACNC,WAAY,S","sources":["src/js/add-class/script.js"],"sourcesContent":["const refs = {\n  containerListRef: document.querySelector(\".js-list\"),\n  guard: document.querySelector(\".js-guard\"),\n  //   btnRef: document.querySelector(\".js-button\"),\n};\n\n// refs.btnRef.addEventListener(\"click\", loadMore);\n\nconst ENDPOINT = \"https://the-one-api.dev/v2/character\";\n\nconst options = {\n  headers: {\n    Authorization: \"Bearer 3sru3q0Sisxo4TsZOe23\",\n  },\n};\n\nlet page = 1;\n\n// function loadMore() {\n//   page += 1;\n//   searchHero(page).then((data) => {\n//     renderMarkup(data.docs);\n//     if (data.page === data.pages) {\n//       refs.btnRef.hidden = true;\n//     }\n//   });\n// }\n\nfunction searchHero(page = 1) {\n  return fetch(`${ENDPOINT}?page=${page}&limit=300`, options).then(\n    (response) => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json();\n    }\n  );\n}\n\nsearchHero()\n  .then((data) => {\n    renderMarkup(data.docs);\n    observer.observe(refs.guard);\n    // refs.btnRef.hidden = false;\n  })\n  .catch((error) => console.log(error));\n\nfunction renderMarkup(arr) {\n  const markup = arr\n    .map(({ name, race }) => {\n      return `<li>\n          <h2>${name}</h2>\n          <p>${race}</p>\n        </li>`;\n    })\n    .join(\"\");\n  refs.containerListRef.insertAdjacentHTML(\"beforeend\", markup);\n}\n\nconst detals = {\n  root: null,\n  rootMargin: \"300px\",\n};\nconst observer = new IntersectionObserver(onload, detals);\n\nfunction onload(enteries) {\n  //   console.log(enteries);\n  enteries.forEach((entry) => {\n    console.log(entry.isIntersecting);\n    if (entry.isIntersecting) {\n      page += 1;\n      searchHero(page).then((data) => {\n        renderMarkup(data.docs);\n        if (data.page === data.pages) {\n          observer.unobserve(refs.guard);\n        }\n      });\n    }\n  });\n}\n\n// console.log(screen.width);\n"],"names":["$558488412fb270fd$var$refs","containerListRef","document","querySelector","guard","$558488412fb270fd$var$ENDPOINT","$558488412fb270fd$var$options","headers","Authorization","$558488412fb270fd$var$page","$558488412fb270fd$var$searchHero","page1","arguments","length","fetch","concat","then","response","ok","Error","statusText","json","$558488412fb270fd$var$renderMarkup","arr","markup","map","param","name","race","join","insertAdjacentHTML","data","docs","$558488412fb270fd$var$observer","observe","catch","error","console","log","IntersectionObserver","enteries","forEach","entry","isIntersecting","page","pages","unobserve","root","rootMargin"],"version":3,"file":"add-class.9840d06d.js.map"}