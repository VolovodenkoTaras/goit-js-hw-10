{"mappings":"AAAA,MAAMA,EAAO,CACXC,iBAAkBC,SAASC,cAAc,YACzCC,MAAOF,SAASC,cAAc,cAQ1BE,EAAU,CACdC,QAAS,CACPC,cAAe,gCAInB,IAAIC,EAAO,EAYX,SAASC,EAAWC,EAAO,GACzB,OAAOC,MAAM,6CAAoBD,cAAkBL,GAASO,MACzDC,IACC,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAE3B,OAAOH,EAASI,MAAM,G,CAa5B,SAASC,EAAaC,GACpB,MAAMC,EAASD,EACZE,KAAI,EAACC,KAAEA,EAAIC,KAAEA,KACL,uBACGD,wBACDC,yBAGVC,KAAK,IACRxB,EAAKC,iBAAiBwB,mBAAmB,YAAaL,E,CAjBxDX,IACGG,MAAMc,IACLR,EAAaQ,EAAKC,MAClBC,EAASC,QAAQ7B,EAAKI,MAAM,IAG7B0B,OAAOC,GAAUC,QAAQC,IAAIF,KAchC,MAIMH,EAAW,IAAIM,sBAErB,SAAgBC,GAEdA,EAASC,SAASC,IAChBL,QAAQC,IAAII,EAAMC,gBACdD,EAAMC,iBACR9B,GAAQ,EACRC,EAAWD,GAAMI,MAAMc,IACrBR,EAAaQ,EAAKC,MACdD,EAAKa,OAASb,EAAKc,OACrBZ,EAASa,UAAUzC,EAAKI,MAAM,I,MAfzB,CACbsC,KAAM,KACNC,WAAY","sources":["src/js/add-class/script.js"],"sourcesContent":["const refs = {\n  containerListRef: document.querySelector(\".js-list\"),\n  guard: document.querySelector(\".js-guard\"),\n  //   btnRef: document.querySelector(\".js-button\"),\n};\n\n// refs.btnRef.addEventListener(\"click\", loadMore);\n\nconst ENDPOINT = \"https://the-one-api.dev/v2/character\";\n\nconst options = {\n  headers: {\n    Authorization: \"Bearer 3sru3q0Sisxo4TsZOe23\",\n  },\n};\n\nlet page = 1;\n\n// function loadMore() {\n//   page += 1;\n//   searchHero(page).then((data) => {\n//     renderMarkup(data.docs);\n//     if (data.page === data.pages) {\n//       refs.btnRef.hidden = true;\n//     }\n//   });\n// }\n\nfunction searchHero(page = 1) {\n  return fetch(`${ENDPOINT}?page=${page}&limit=300`, options).then(\n    (response) => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json();\n    }\n  );\n}\n\nsearchHero()\n  .then((data) => {\n    renderMarkup(data.docs);\n    observer.observe(refs.guard);\n    // refs.btnRef.hidden = false;\n  })\n  .catch((error) => console.log(error));\n\nfunction renderMarkup(arr) {\n  const markup = arr\n    .map(({ name, race }) => {\n      return `<li>\n          <h2>${name}</h2>\n          <p>${race}</p>\n        </li>`;\n    })\n    .join(\"\");\n  refs.containerListRef.insertAdjacentHTML(\"beforeend\", markup);\n}\n\nconst detals = {\n  root: null,\n  rootMargin: \"300px\",\n};\nconst observer = new IntersectionObserver(onload, detals);\n\nfunction onload(enteries) {\n  //   console.log(enteries);\n  enteries.forEach((entry) => {\n    console.log(entry.isIntersecting);\n    if (entry.isIntersecting) {\n      page += 1;\n      searchHero(page).then((data) => {\n        renderMarkup(data.docs);\n        if (data.page === data.pages) {\n          observer.unobserve(refs.guard);\n        }\n      });\n    }\n  });\n}\n\n// console.log(screen.width);\n"],"names":["$1ad679698954802a$var$refs","containerListRef","document","querySelector","guard","$1ad679698954802a$var$options","headers","Authorization","$1ad679698954802a$var$page","$1ad679698954802a$var$searchHero","page1","fetch","then","response","ok","Error","statusText","json","$1ad679698954802a$var$renderMarkup","arr","markup","map","name","race","join","insertAdjacentHTML","data","docs","$1ad679698954802a$var$observer","observe","catch","error","console","log","IntersectionObserver","enteries","forEach","entry","isIntersecting","page","pages","unobserve","root","rootMargin"],"version":3,"file":"add-class.1edf4f59.js.map"}